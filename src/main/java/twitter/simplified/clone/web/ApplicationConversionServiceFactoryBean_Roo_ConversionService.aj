/*******************************************************************************
 * Copyright (C) 2012 Jo√£o Antunes
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 ******************************************************************************/
// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package twitter.simplified.clone.web;

import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;
import twitter.simplified.clone.domain.Tweet;
import twitter.simplified.clone.domain.User;
import twitter.simplified.clone.web.ApplicationConversionServiceFactoryBean;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Tweet, String> ApplicationConversionServiceFactoryBean.getTweetToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<twitter.simplified.clone.domain.Tweet, java.lang.String>() {
            public String convert(Tweet tweet) {
                return new StringBuilder().append(tweet.getContent()).append(" ").append(tweet.getCreationDate()).toString();
            }
        };
    }
    
    public Converter<Long, Tweet> ApplicationConversionServiceFactoryBean.getIdToTweetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, twitter.simplified.clone.domain.Tweet>() {
            public twitter.simplified.clone.domain.Tweet convert(java.lang.Long id) {
                return Tweet.findTweet(id);
            }
        };
    }
    
    public Converter<String, Tweet> ApplicationConversionServiceFactoryBean.getStringToTweetConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, twitter.simplified.clone.domain.Tweet>() {
            public twitter.simplified.clone.domain.Tweet convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Tweet.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<twitter.simplified.clone.domain.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getUsername()).append(" ").append(user.getEmailAddress()).append(" ").append(user.getFullName()).append(" ").append(user.getPassword()).toString();
            }
        };
    }
    
    public Converter<Long, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, twitter.simplified.clone.domain.User>() {
            public twitter.simplified.clone.domain.User convert(java.lang.Long id) {
                return User.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, twitter.simplified.clone.domain.User>() {
            public twitter.simplified.clone.domain.User convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), User.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getTweetToStringConverter());
        registry.addConverter(getIdToTweetConverter());
        registry.addConverter(getStringToTweetConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
